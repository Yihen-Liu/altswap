/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  VaultHubCallee,
  VaultHubCalleeInterface,
} from "../../../libraries/Constants.sol/VaultHubCallee";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    name: "GET_LABEL_EXIST_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GET_LABEL_NAME_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HAS_MINTED_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HAS_REGISTER_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INIT_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINT_SAVE_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUERY_BY_INDEX_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUERY_BY_NAME_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "QUERY_PRIVATE_VAULT_ADDRESS_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAVE_WITHOUT_MINT_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SAVED_ITEMS_PERMIT",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101b461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100d35760003560e01c8063809f2f021161008b578063e2b7e2a311610065578063e2b7e2a31461017d578063e6a19f9a1461018b578063f6bc5baa1461019957600080fd5b8063809f2f02146101535780639bdc03b114610161578063a225217b1461016f57600080fd5b80632ff51e7a116100bc5780632ff51e7a1461012957806347a9f34314610137578063781b498f1461014557600080fd5b806320afd30b146100d857806328258f251461011b575b600080fd5b6100e66395781f1f60e01b81565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200160405180910390f35b6100e663795700ef60e11b81565b6100e6636e8c0dab60e11b81565b6100e66394f82d8160e01b81565b6100e6630692776960e21b81565b6100e66315b2755f60e01b81565b6100e6631abaeca760e31b81565b6100e66379861a0560e01b81565b6100e663560ee72b60e01b81565b6100e66301c190bd60e01b81565b6100e6631596084360e01b8156fea164736f6c6343000811000a";

type VaultHubCalleeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultHubCalleeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultHubCallee__factory extends ContractFactory {
  constructor(...args: VaultHubCalleeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VaultHubCallee> {
    return super.deploy(overrides || {}) as Promise<VaultHubCallee>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VaultHubCallee {
    return super.attach(address) as VaultHubCallee;
  }
  override connect(signer: Signer): VaultHubCallee__factory {
    return super.connect(signer) as VaultHubCallee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultHubCalleeInterface {
    return new utils.Interface(_abi) as VaultHubCalleeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultHubCallee {
    return new Contract(address, _abi, signerOrProvider) as VaultHubCallee;
  }
}
