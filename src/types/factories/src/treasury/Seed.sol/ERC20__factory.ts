/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../../src/treasury/Seed.sol/ERC20";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010f9380380620010f983398101604081905262000034916200014b565b600562000042838262000244565b50600662000051828262000244565b50506007805460ff1916601217905550600080546001600160a01b031916331790556001805460ff60a01b1916905562000310565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ae57600080fd5b81516001600160401b0380821115620000cb57620000cb62000086565b604051601f8301601f19908116603f01168101908282118183101715620000f657620000f662000086565b816040528381526020925086838588010111156200011357600080fd5b600091505b8382101562000137578582018301518183018401529082019062000118565b600093810190920192909252949350505050565b600080604083850312156200015f57600080fd5b82516001600160401b03808211156200017757600080fd5b62000185868387016200009c565b935060208501519150808211156200019c57600080fd5b50620001ab858286016200009c565b9150509250929050565b600181811c90821680620001ca57607f821691505b602082108103620001eb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023f57600081815260208120601f850160051c810160208610156200021a5750805b601f850160051c820191505b818110156200023b5782815560010162000226565b5050505b505050565b81516001600160401b0381111562000260576200026062000086565b6200027881620002718454620001b5565b84620001f1565b602080601f831160018114620002b05760008415620002975750858301515b600019600386901b1c1916600185901b1785556200023b565b600085815260208120601f198616915b82811015620002e157888601518255948401946001909101908401620002c0565b5085821015620003005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610dd980620003206000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80634f02c420116100b2578063a457c2d711610081578063dd62ed3e11610066578063dd62ed3e1461026a578063f2fde38b146102a3578063fca3b5aa146102b857600080fd5b8063a457c2d714610244578063a9059cbb1461025757600080fd5b80634f02c420146101ec57806370a08231146102005780638da5cb5b1461022957806395d89b411461023c57600080fd5b806323b872dd116100ee57806323b872dd1461019e578063313ce567146101b157806339509351146101c657806340c10f19146101d957600080fd5b806306fdde0314610120578063075461721461013e578063095ea7b31461016957806318160ddd1461018c575b600080fd5b6101286102cb565b6040516101359190610bc5565b60405180910390f35b600154610151906001600160a01b031681565b6040516001600160a01b039091168152602001610135565b61017c610177366004610c2f565b61035d565b6040519015158152602001610135565b6004545b604051908152602001610135565b61017c6101ac366004610c59565b610374565b60075460405160ff9091168152602001610135565b61017c6101d4366004610c2f565b6103dd565b61017c6101e7366004610c2f565b610413565b60015461017c90600160a01b900460ff1681565b61019061020e366004610c95565b6001600160a01b031660009081526002602052604090205490565b600054610151906001600160a01b031681565b6101286104dd565b61017c610252366004610c2f565b6104ec565b61017c610265366004610c2f565b61053b565b610190610278366004610cb0565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6102b66102b1366004610c95565b610548565b005b6102b66102c6366004610c95565b610632565b6060600580546102da90610ce3565b80601f016020809104026020016040519081016040528092919081815260200182805461030690610ce3565b80156103535780601f1061032857610100808354040283529160200191610353565b820191906000526020600020905b81548152906001019060200180831161033657829003601f168201915b5050505050905090565b600061036a338484610721565b5060015b92915050565b6000610381848484610846565b6103d384336103ce85604051806060016040528060288152602001610d80602891396001600160a01b038a16600090815260036020908152604080832033845290915290205491906109e4565b610721565b5060019392505050565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909161036a9185906103ce9086610a1b565b60018054600091600160a01b90910460ff161515146104795760405162461bcd60e51b815260206004820152601760248201527f536565643a206d696e74656420697320696e76616c696400000000000000000060448201526064015b60405180910390fd5b6001546001600160a01b031633146104d35760405162461bcd60e51b815260206004820152601b60248201527f536565643a206f6e6c79204d696e7465722063616e20646f20697400000000006044820152606401610470565b61036a8383610a81565b6060600680546102da90610ce3565b600061036a33846103ce85604051806060016040528060258152602001610da8602591393360009081526003602090815260408083206001600160a01b038d16845290915290205491906109e4565b600061036a338484610846565b6000546001600160a01b031633146105a25760405162461bcd60e51b815260206004820152601a60248201527f536565643a206f6e6c79206f776e65722063616e20646f2069740000000000006044820152606401610470565b6001600160a01b0381166105f85760405162461bcd60e51b815260206004820152601260248201527f536565643a205a45524f204144445245535300000000000000000000000000006044820152606401610470565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461068c5760405162461bcd60e51b815260206004820152601a60248201527f536565643a206f6e6c79206f776e65722063616e20646f2069740000000000006044820152606401610470565b6001600160a01b0381166106e25760405162461bcd60e51b815260206004820152601560248201527f536565643a2061646472657373206973205a45524f00000000000000000000006044820152606401610470565b600180547fffffffffffffffffffffff000000000000000000000000000000000000000000166001600160a01b0390921691909117600160a01b179055565b6001600160a01b0383166107835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610470565b6001600160a01b0382166107e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610470565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166108c25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610470565b6001600160a01b0382166109245760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610470565b61096181604051806060016040528060268152602001610d5a602691396001600160a01b03861660009081526002602052604090205491906109e4565b6001600160a01b0380851660009081526002602052604080822093909355908416815220546109909082610a1b565b6001600160a01b0380841660008181526002602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108399085815260200190565b60008184841115610a085760405162461bcd60e51b81526004016104709190610bc5565b50610a138385610d33565b949350505050565b600080610a288385610d46565b905083811015610a7a5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610470565b9392505050565b6001600160a01b038216610ad75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610470565b6b051355d6a083d3ad160000006004541115610b355760405162461bcd60e51b815260206004820152601b60248201527f45524332303a20617272697665206174206d617820737570706c7900000000006044820152606401610470565b600454610b429082610a1b565b6004556001600160a01b038216600090815260026020526040902054610b689082610a1b565b6001600160a01b0383166000818152600260205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bb99085815260200190565b60405180910390a35050565b600060208083528351808285015260005b81811015610bf257858101830151858201604001528201610bd6565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c2a57600080fd5b919050565b60008060408385031215610c4257600080fd5b610c4b83610c13565b946020939093013593505050565b600080600060608486031215610c6e57600080fd5b610c7784610c13565b9250610c8560208501610c13565b9150604084013590509250925092565b600060208284031215610ca757600080fd5b610a7a82610c13565b60008060408385031215610cc357600080fd5b610ccc83610c13565b9150610cda60208401610c13565b90509250929050565b600181811c90821680610cf757607f821691505b602082108103610d1757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561036e5761036e610d1d565b8082018082111561036e5761036e610d1d56fe45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa164736f6c6343000811000a";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
