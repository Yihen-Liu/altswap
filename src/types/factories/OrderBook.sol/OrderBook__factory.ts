/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  OrderBook,
  OrderBookInterface,
} from "../../OrderBook.sol/OrderBook";
import type { PromiseOrValue } from "../../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdtToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipientAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "data",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DataStored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getUserDataByIndex",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserHistory",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "data",
            type: "int256",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct OrderBook.UserData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipientAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_data",
        type: "int256",
      },
      {
        internalType: "address",
        name: "sBTCReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenType",
        type: "string",
      },
    ],
    name: "storeData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_data",
        type: "int256",
      },
      {
        internalType: "address",
        name: "sBTCReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenType",
        type: "string",
      },
    ],
    name: "storeDataDisableRecipent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRecipient",
        type: "address",
      },
    ],
    name: "updateRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userHistory",
    outputs: [
      {
        internalType: "int256",
        name: "data",
        type: "int256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenType",
        type: "string",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112b73803806112b783398101604081905261002f916100a0565b600080546001600160a01b039586166001600160a01b031991821617909155600180549486169482169490941790935560049190915560028054919093169082161790915560038054909116331790556100ed565b80516001600160a01b038116811461009b57600080fd5b919050565b600080600080608085870312156100b657600080fd5b6100bf85610084565b93506100cd60208601610084565b9250604085015191506100e260608601610084565b905092959194509250565b6111bb806100fc6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063ad1adeb511610066578063ad1adeb514610214578063f2fde38b14610227578063f77f7d2d1461023a578063feec756c1461024d57600080fd5b80638da5cb5b146101d2578063a035b1fe146101e5578063a98ad46c146101ee578063ab2b50d71461020157600080fd5b806348b9ef40116100d357806348b9ef40146101735780634fb3d3b11461018a5780635aff5999146101aa5780638d6cc56d146101bd57600080fd5b806311eac855146100fa5780631e32ea281461012a57806322e8b99014610160575b600080fd5b60015461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d610138366004610eb3565b610260565b604080519384526001600160a01b03909216602084015290820152606001610121565b61013d61016e366004610eb3565b6102e2565b61017c60065481565b604051908152602001610121565b61019d610198366004610edd565b61032e565b6040516101219190610eff565b60025461010d906001600160a01b031681565b6101d06101cb366004610f61565b6103c6565b005b60035461010d906001600160a01b031681565b61017c60045481565b60005461010d906001600160a01b031681565b6101d061020f36600461101d565b61042a565b6101d061022236600461107e565b61077f565b6101d0610235366004610edd565b610a12565b6101d061024836600461101d565b610af1565b6101d061025b366004610edd565b610d3c565b6001600160a01b038216600090815260056020526040812080548291829182919086908110610291576102916110c5565b600091825260209182902060408051606081018252600393909302909101805480845260018201546001600160a01b0316948401859052600290910154929091018290529891975095509350505050565b600560205281600052604060002081815481106102fe57600080fd5b60009182526020909120600390910201805460018201546002909201549093506001600160a01b03909116915083565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b828210156103bb5760008481526020908190206040805160608101825260038602909201805483526001808201546001600160a01b031684860152600290910154918301919091529083529092019101610366565b505050509050919050565b6003546001600160a01b031633146104255760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b600455565b6040805180820190915260048152631554d11560e21b6020918201528151908201206000907f74e5e263d4ef61ad836ecb4da4e5e7cc4e949a6b06d255609264859fdb4316300161048757506000546001600160a01b0316610529565b6040805180820190915260048152635553444360e01b6020918201528251908301207f29535e4168d63ec2988ccae9ecde9b63335195a6eaab88dae98ff067906bd156016104e157506001546001600160a01b0316610529565b60405162461bcd60e51b815260206004820152601660248201527f556e737570706f7274656420746f6b656e207479706500000000000000000000604482015260640161041c565b60006004548461053991906110db565b6040516370a0823160e01b815233600482015290915081906001600160a01b038416906370a0823190602401602060405180830381865afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190611106565b10156105f45760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e6365000000000000604482015260640161041c565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b919061111f565b6106b75760405162461bcd60e51b815260206004820152601560248201527f546f6b656e207472616e73666572206661696c65640000000000000000000000604482015260640161041c565b604080516060810182528781526001600160a01b03878116602080840191825242848601818152336000818152600585528881208054600180820183559183529590912088516003909602019485559451948401805473ffffffffffffffffffffffffffffffffffffffff19169590961694909417909455925160029091015592519192917f857a2893a5f092e545e2fca183144f55963d97fb004b8f81a047ff3f3ac1dca79161076e918b918b918a9190611141565b60405180910390a250505050505050565b6003546001600160a01b031633146107d95760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161041c565b6040805180820190915260048152631554d11560e21b6020918201528151908201206000907f74e5e263d4ef61ad836ecb4da4e5e7cc4e949a6b06d255609264859fdb4316300161083657506000546001600160a01b031661088c565b6040805180820190915260048152635553444360e01b6020918201528251908301207f29535e4168d63ec2988ccae9ecde9b63335195a6eaab88dae98ff067906bd156016104e157506001546001600160a01b03165b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190611106565b9050808411156109495760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015260640161041c565b60035460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018690529083169063a9059cbb906044016020604051808303816000875af115801561099c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c0919061111f565b610a0c5760405162461bcd60e51b815260206004820152601760248201527f546f6b656e207769746864726177616c206661696c6564000000000000000000604482015260640161041c565b50505050565b6003546001600160a01b03163314610a6c5760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161041c565b6001600160a01b038116610ac25760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604482015260640161041c565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6040805180820190915260048152631554d11560e21b6020918201528151908201206000907f74e5e263d4ef61ad836ecb4da4e5e7cc4e949a6b06d255609264859fdb43163001610b4e57506000546001600160a01b0316610ba4565b6040805180820190915260048152635553444360e01b6020918201528251908301207f29535e4168d63ec2988ccae9ecde9b63335195a6eaab88dae98ff067906bd156016104e157506001546001600160a01b03165b600060045484610bb491906110db565b6040516370a0823160e01b815233600482015290915081906001600160a01b038416906370a0823190602401602060405180830381865afa158015610bfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c219190611106565b1015610c6f5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e6365000000000000604482015260640161041c565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce6919061111f565b610d325760405162461bcd60e51b815260206004820152601560248201527f546f6b656e207472616e73666572206661696c65640000000000000000000000604482015260640161041c565b6106b78282610dc5565b6003546001600160a01b03163314610d965760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161041c565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60025460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018390529083169063a9059cbb906044016020604051808303816000875af1158015610e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3c919061111f565b610e935760405162461bcd60e51b815260206004820152602260248201527f546f6b656e207472616e7366657220746f20726563697069656e74206661696c604482015261195960f21b606482015260840161041c565b5050565b80356001600160a01b0381168114610eae57600080fd5b919050565b60008060408385031215610ec657600080fd5b610ecf83610e97565b946020939093013593505050565b600060208284031215610eef57600080fd5b610ef882610e97565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610f5457815180518552868101516001600160a01b0316878601528501518585015260609093019290850190600101610f1c565b5091979650505050505050565b600060208284031215610f7357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610fa157600080fd5b813567ffffffffffffffff80821115610fbc57610fbc610f7a565b604051601f8301601f19908116603f01168101908282118183101715610fe457610fe4610f7a565b81604052838152866020858801011115610ffd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561103357600080fd5b8435935061104360208601610e97565b925060408501359150606085013567ffffffffffffffff81111561106657600080fd5b61107287828801610f90565b91505092959194509250565b6000806040838503121561109157600080fd5b82359150602083013567ffffffffffffffff8111156110af57600080fd5b6110bb85828601610f90565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761110057634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561111857600080fd5b5051919050565b60006020828403121561113157600080fd5b81518015158114610ef857600080fd5b848152600060206001600160a01b0386168184015260806040840152845180608085015260005b818110156111845786810183015185820160a001528201611168565b50600060a0828601015260a0601f19601f830116850101925050508260608301529594505050505056fea164736f6c6343000811000a";

type OrderBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderBook__factory extends ContractFactory {
  constructor(...args: OrderBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdtToken: PromiseOrValue<string>,
    _usdcToken: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _recipientAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderBook> {
    return super.deploy(
      _usdtToken,
      _usdcToken,
      _price,
      _recipientAddress,
      overrides || {}
    ) as Promise<OrderBook>;
  }
  override getDeployTransaction(
    _usdtToken: PromiseOrValue<string>,
    _usdcToken: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _recipientAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _usdtToken,
      _usdcToken,
      _price,
      _recipientAddress,
      overrides || {}
    );
  }
  override attach(address: string): OrderBook {
    return super.attach(address) as OrderBook;
  }
  override connect(signer: Signer): OrderBook__factory {
    return super.connect(signer) as OrderBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderBookInterface {
    return new utils.Interface(_abi) as OrderBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderBook {
    return new Contract(address, _abi, signerOrProvider) as OrderBook;
  }
}
